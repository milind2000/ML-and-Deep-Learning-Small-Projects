# -*- coding: utf-8 -*-
"""KmeanClusteringMp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LI41tcUlh0cIRTNRmTyXVz3xcCH4AQt5
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x

import tensorflow as tf
import tensorflow_probability as tfp

tfd= tfp.distributions

initial_dist = tfd.Categorical(probs=[0.2, 0.8])
transition_dist =  tfd.Categorical(probs= [[0.7,0.3],
                                           [0.2, 0.8]])
observation_dist = tfd.Normal(loc=[0., 15.], scale= [5., 10.])

model = tfd.HiddenMarkovModel(
    initial_distribution=initial_dist,
    transition_distribution=transition_dist,
    observation_distribution=observation_dist,
    num_steps=7)

"""Here the num_steps denotes the number of future items we are predicting. In this model using the initial , transition and the observation data we are able to predict the outcome of the next 7 days'temp. Next we will implement the mean() method and use a session to see the value of the Tensor."""

mean = model.mean()

# due to the way TensorFlow works on a lower level we need to evaluate part of the graph
# from within a session to see the value of this tensor

# in the new version of tensorflow we need to use tf.compat.v1.Session() rather than just tf.Session()
with tf.compat.v1.Session() as sess:  
  print(mean.numpy())